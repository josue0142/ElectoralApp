// <auto-generated />
using System;
using ElectoralApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElectoralApp.Migrations
{
    [DbContext(typeof(BDelectoralContext))]
    partial class BDelectoralContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ElectoralApp.Models.Candidatos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<string>("FotoDePerfil")
                        .IsRequired()
                        .HasColumnName("Foto_de_perfil")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<int?>("PartidoFk")
                        .HasColumnName("Partido_FK");

                    b.Property<int?>("PuestoFk")
                        .HasColumnName("Puesto_FK");

                    b.HasKey("Id");

                    b.HasIndex("PartidoFk");

                    b.HasIndex("PuestoFk");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("ElectoralApp.Models.Ciudadanos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("DocumentoDeIdentidad")
                        .IsRequired()
                        .HasColumnName("Documento_de_identidad")
                        .HasMaxLength(25);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Ciudadanos");
                });

            modelBuilder.Entity("ElectoralApp.Models.Elecciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado");

                    b.Property<string>("FechaDeRealización")
                        .IsRequired()
                        .HasColumnName("Fecha_de_realización")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Elecciones");
                });

            modelBuilder.Entity("ElectoralApp.Models.Partidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<string>("LogoDelPartido")
                        .IsRequired()
                        .HasColumnName("Logo_del_partido")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("ElectoralApp.Models.PuestoElectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("PuestoElectivo");
                });

            modelBuilder.Entity("ElectoralApp.Models.Resultados", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("CandidatosFk")
                        .HasColumnName("Candidatos_FK");

                    b.Property<int>("CiudadanosFk")
                        .HasColumnName("Ciudadanos_FK");

                    b.Property<int>("EleccionesFk")
                        .HasColumnName("Elecciones_FK");

                    b.HasKey("Id");

                    b.HasIndex("CandidatosFk");

                    b.HasIndex("CiudadanosFk");

                    b.HasIndex("EleccionesFk");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("ElectoralApp.Models.Candidatos", b =>
                {
                    b.HasOne("ElectoralApp.Models.Partidos", "PartidoFkNavigation")
                        .WithMany("Candidatos")
                        .HasForeignKey("PartidoFk")
                        .HasConstraintName("FK_Candidatos_Partidos");

                    b.HasOne("ElectoralApp.Models.PuestoElectivo", "PuestoFkNavigation")
                        .WithMany("Candidatos")
                        .HasForeignKey("PuestoFk")
                        .HasConstraintName("FK_Candidatos_PuestoElectivo");
                });

            modelBuilder.Entity("ElectoralApp.Models.Resultados", b =>
                {
                    b.HasOne("ElectoralApp.Models.Candidatos", "CandidatosFkNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("CandidatosFk")
                        .HasConstraintName("FK_Resultados_Candidatos");

                    b.HasOne("ElectoralApp.Models.Ciudadanos", "CiudadanosFkNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("CiudadanosFk")
                        .HasConstraintName("FK_Resultados_Ciudadanos");

                    b.HasOne("ElectoralApp.Models.Elecciones", "EleccionesFkNavigation")
                        .WithMany("Resultados")
                        .HasForeignKey("EleccionesFk")
                        .HasConstraintName("FK_Resultados_Elecciones");
                });
#pragma warning restore 612, 618
        }
    }
}
